PLUGINS USED:

pathogen - easier plugin management (http://www.vim.org/scripts/script.php?script_id=2332)
MRU - most recently used files management (http://www.vim.org/scripts/script.php?script_id=521)
Grep - allows you to search for a pattern in one or more files and jump to them (http://www.vim.org/scripts/script.php?script_id=311)
CtrlP - fuzzy finder for files, buffers, MRU and even tags (https://github.com/kien/ctrlp.vim)
TagList - source code browser (http://vim-taglist.sourceforge.net/)
VCSCommand -  manipulating files controlled by CVS, SVN, SVK, git, bzr, and hg within VIM (http://www.vim.org/scripts/script.php?script_id=90)
phpcomplete (http://www.vim.org/scripts/script.php?script_id=3171)
LustyJuggler - high speed buffer juggler (http://www.vim.org/scripts/script.php?script_id=2050)
surround - provides mappings to easily delete, change and add such surroundings in pair (https://github.com/tpope/vim-surround)
repeat - to repeat previous command, compliments surround nicely (https://github.com/tpope/vim-repeat)
Tasklist - FIXME, TODO, and XXX (or a custom list) and put them in a handy list for you to browse (http://www.vim.org/scripts/script.php?script_id=2607)
phpcs (http://www.vim.org/scripts/script.php?script_id=39280
snipMate - implements some of TextMate's snippets features in Vim (https://github.com/msanders/snipmate.vim)
pyflakes - analyze Python programs and detect various errors (https://github.com/mitechie/pyflakes-pathogen)
NERDTree - navigate files (https://github.com/scrooloose/nerdtree)
UltiSnips - snippets (https://github.com/SirVer/ultisnips)
eclim - access eclipse code editing features (http://eclim.org)

=====================================

we need ctags (install exuberant-ctags) for php:
go to root directory, run to create tags in each folder:
find * -type d -exec ~/.vim/gentags {} \;

run this once to build global tag file, contains only non-static tags:
ctags --verbose -f tags -h ".php" -R --exclude="\.svn" --totals=yes --tag-relative=yes --fields=+afkst --PHP-kinds=+cf-v --file-scope=no -R

for python,
ctags -R . -i

for java,
ctags --verbose -R --language-force=java

=====================================

for Command-t and lustyjuggler, need to install vim-nox for ruby support
or recompile vim to have ruby enabled
$ hg clone https://vim.googlecode.com/hg/ vim
$ cd vim
$ ./configure --enable-rubyinterp
$ make
$ ./src/vim --version | grep ruby

for Command-t, make sure you have ruby1.8 and ruby1.8-dev installed to run $ ruby extconf.rb -> make


=====================================

for taglist to work, in ~/.ctags, put this in (default params):
-R 
--exclude="\.svn" 
--totals=yes 
--tag-relative=yes 
--fields=+afkst 
--PHP-kinds=+cf-v 

=====================================

make svn ignore tags file in every folder. in ~/.subversion/config,

global-ignores = tags

=====================================

color themes, put inside colors/ folder

=====================================

USAGE - plugins

grep: F3
MRU: :MRU
CtrlP: ,t - use ctrl-f or ctrl-b cycle between modes
VCS: VCSBlame, VCSLog --stop-on-copy, VCSUpdate (,cu), VCSVimDiff (,cv)
TagList: F8
surround: cs"- ("a word" to -a word-)
repeat: press . to repeat (compliments surround nicely)
lustyjuggler: ,lj
Tasklist: ,td
phpcs: :Phpcs
phpcomplete: use omni ctrl-x ctrl-o
snipMate: doc_h<tab>
NERD tree: ,d
eclim: ctrl-x crtl-u

=====================================

USAGE 

save: ,w
quit without saving: ,q
escape insert mode: ;;
strip trailing space: ,<space>

autocomplete: ctrl-n
to jump to function definition and back: ctrl+] and ctrl+t
to list all function matches: g ctrl+] (or :tj <tagname>])
to open class file in new split window: ctrl+w g ctrl+]
to open class file in a new tab: ctrl+\

file browser: :n.

change color on the fly - :colo wombat

split window: ctrl+w s
vertically: ctrl+w v
navigate between windows:ctrl+h, ctrl+j, ctrl+k, ctrl+l
open file in split window - :sp file.php

to fold/unfold lines: visual select, then space to toggle display
toggle between paste mode: F2
edit vimrc: ,ev
reload vimrc: ,sv
comment line: ,/ (/) or ,h (#)
uncomment line: ,\ (/) or ,H (#)

=====================================
=====================================

